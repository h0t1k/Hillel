@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
    Убираем внутренние отступы слева тегам списков,
    у которых есть атрибут class
   */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
    Убираем внешние отступы body и двум другим тегам,
    у которых есть атрибут class
   */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
    Убираем внешние отступы вертикали нужным тегам,
    у которых есть атрибут class
   */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
    Убираем стандартный маркер маркированному списку,
    у которого есть атрибут class
   */
:where(ul[class]) {
  list-style: none;
}

/**
    Обнуляем вертикальные внешние отступы параграфа,
    объявляем локальную переменную для внешнего отступа вниз,
    чтобы избежать взаимодействие с более сложным селектором
   */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
    Внешний отступ вниз для параграфа без атрибута class,
    который расположен не последним среди своих соседних элементов
   */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
    Упрощаем работу с изображениями
   */
img {
  display: block;
  max-width: 100%;
}

/**
    Наследуем свойства шрифт для полей ввода
   */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
  /**
      Плавный скролл
     */
  scroll-behavior: smooth;
}

body {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
  /**
      Унифицированный интерлиньяж
     */
  line-height: 1.5;
}

/**
    Приводим к единому цвету svg-элементы
   */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами
   */
svg * {
  transition-property: fill, stroke;
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(16, 1fr);
  height: 100%;
}

.grid-element {
  display: grid;
  align-items: center;
  text-align: center;
}

.header {
  background-color: black;
  color: #fff;
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 3;
}
@media (max-width: 767px) {
  .header {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 1;
    grid-row-end: 3;
  }
}
.menu {
  background-color: red;
  color: #fff;
  grid-column-start: 2;
  grid-column-end: 5;
  grid-row-start: 1;
  grid-row-end: 3;
}
@media (max-width: 767px) {
  .menu {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 7;
    grid-row-end: 17;
  }
}
@media (max-width: 360px) {
  .menu {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 3;
    grid-row-end: 5;
  }
}

.hero {
  background-color: blue;
  color: #fff;
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 3;
  grid-row-end: 9;
}
@media (max-width: 767px) {
  .hero {
    grid-row-end: 7;
  }
}
@media (max-width: 360px) {
  .hero {
    grid-row-start: 5;
    grid-row-end: 8;
  }
}

.main {
  background-color: rgb(212, 221, 29);
  color: #fff;
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 9;
  grid-row-end: 15;
}
@media (max-width: 767px) {
  .main {
    grid-column-start: 2;
    grid-column-end: 5;
    grid-row-start: 7;
    grid-row-end: 12;
  }
}
@media (max-width: 360px) {
  .main {
    grid-column-start: 1;
    grid-row-start: 8;
    grid-row-end: 11;
  }
}

.banner {
  background-color: rgb(159, 159, 179);
  color: #fff;
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 15;
  grid-row-end: 17;
}
@media (max-width: 767px) {
  .banner {
    grid-column-start: 2;
    grid-column-end: 5;
    grid-row-start: 12;
    grid-row-end: 15;
  }
}
@media (max-width: 360px) {
  .banner {
    grid-column-start: 1;
    grid-row-start: 11;
    grid-row-end: 13;
  }
}

.extra {
  background-color: rgb(162, 7, 126);
  color: #fff;
  grid-column-start: 4;
  grid-column-end: 5;
  grid-row-start: 12;
  grid-row-end: 15;
}
@media (max-width: 767px) {
  .extra {
    grid-column-start: 2;
    grid-column-end: 4;
    grid-row-start: 15;
    grid-row-end: 17;
  }
}
@media (max-width: 360px) {
  .extra {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 13;
    grid-row-end: 15;
  }
}

.image {
  background-color: rgb(18, 113, 19);
  color: #fff;
  grid-column-start: 4;
  grid-column-end: 5;
  grid-row-start: 9;
  grid-row-end: 12;
}
@media (max-width: 767px) {
  .image {
    grid-column-start: 4;
    grid-column-end: 5;
    grid-row-start: 15;
    grid-row-end: 17;
  }
}
@media (max-width: 360px) {
  .image {
    grid-column-start: 1;
    grid-row-start: 15;
    grid-row-end: 17;
  }
}

/*# sourceMappingURL=styles.css.map */
